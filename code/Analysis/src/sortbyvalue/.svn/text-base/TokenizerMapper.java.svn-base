package sortbyvalue;

import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TokenizerMapper extends Mapper<Object, Text, IntWritable, Text> {
	private static final transient Logger LOG = LoggerFactory
			.getLogger(TokenizerMapper.class);
	private Text word = new Text();

	public void map(Object key, Text value, Context context)
			throws IOException, InterruptedException {
		String doc = value.toString();
		String[] lines = doc.split("\n");
		for (String line : lines) {
			String[] contents = line.split("\t");
			LOG.debug("Size: " + contents.length + "Contents: " + line);
			if (contents.length == 2) {
				String innerkey = contents[0];
				String innerval = contents[1];
				word.set(innerkey);
				IntWritable intKey = new IntWritable();
				intKey.set(Integer.parseInt(innerval));
				context.write(intKey, word);
			}
		}
	}

}