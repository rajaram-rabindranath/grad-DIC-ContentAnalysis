package shortestPath;

import java.util.*;

import org.apache.hadoop.io.Text;

public class Node {

	public static enum Color {
		WHITE, GRAY, BLACK
	};

	private String node_id;
	private int distance;
	private List<String> edges = new ArrayList<String>();
	private Color color = Color.WHITE;
	private String parent;

	public Node() {
		distance = Integer.MAX_VALUE;
		color = Color.WHITE;
		parent = null;
	}

	public Node(String nodeInfo) {

		String[] inputLine = nodeInfo.split("\t");
		String key = "", value = "";

		try {
			key = inputLine[0];
			value = inputLine[1];

		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);

		}

		String[] tokens = value.split("\\|");

		this.node_id = key;

		for (String s : tokens[0].split(",")) {
			if (s.length() > 0 && !s.equals("NULL")) {
				edges.add(s);
			}
		}

		if (tokens[1].equals("Integer.MAX_VALUE")) {
			this.distance = Integer.MAX_VALUE;
		} else {
			this.distance = Integer.parseInt(tokens[1]);
		}

		this.color = Color.valueOf(tokens[2]);

		this.parent = tokens[3];
	}

	public Text getNodeInfo() {
		StringBuffer s = new StringBuffer();

		try {
			for (String v : edges) {
				s.append(v).append(",");
			}
			if(edges.size() == 0)
				s.append("NULL");
		} catch (NullPointerException e) {
			e.printStackTrace();
			System.exit(1);
		}

		s.append("|");

		if (this.distance < Integer.MAX_VALUE) {
			s.append(this.distance).append("|");
		} else {
			s.append("Integer.MAX_VALUE").append("|");
		}

		s.append(color.toString()).append("|");

		s.append(getParent());

		return new Text(s.toString());
	}

	public String getId() {
		return this.node_id;
	}

	public int getDistance() {
		return this.distance;
	}

	public void setId(String id) {
		this.node_id = id;
	}

	public void setDistance(int distance) {
		this.distance = distance;
	}

	public Color getColor() {
		return this.color;
	}

	public void setColor(Color color) {
		this.color = color;
	}

	public List<String> getEdges() {
		return this.edges;
	}

	public void setEdges(List<String> edges) {
		this.edges = edges;
	}

	public void setParent(String parent) {
		this.parent = parent;
	}

	public String getParent() {
		return parent;
	}

}